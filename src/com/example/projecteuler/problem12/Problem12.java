/*
 * Author: Prtish Shah
 * Date: 02-12-14
 * Version: 1.0
 * Description: 
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:

		 1: 1
		 3: 1,3
		 6: 1,2,3,6
		10: 1,2,5,10
		15: 1,3,5,15
		21: 1,3,7,21
		28: 1,2,4,7,14,28
	We can see that 28 is the first triangle number to have over five divisors.
	What is the value of the first triangle number to have over five hundred divisors?
 */
package com.example.projecteuler.problem12;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

public class Problem12 {

	
	public int findNumberOverFiveHundredDivisor()
	{
		int currentIndex = 1;
		int nextNum = 0;
		HashMap<Integer, Set<Integer>> hash=  new HashMap<Integer, Set<Integer>>(); 
		while(true)
		{
			nextNum += currentIndex;
			
			int temp = nextNum;
			Set<Integer> tempSet = new HashSet<Integer>();
			while(temp > 0)
			{
				if(nextNum % temp == 0)
				{
					tempSet.add(temp);
				}
				temp--;
			}
			//System.out.println("Current Number:" + nextNum + " Divisors: " + tempSet.toString());
			hash.put(nextNum, tempSet);
			currentIndex++;
			if(tempSet.size() > 500)
			{
				System.out.println("Find solution");
				break;
			}
		}
		return nextNum;
	}
	public static void main(String[] args) {
		Problem12 pb12 = new Problem12();
		System.out.println("Number over 500 divisor is "+ pb12.findNumberOverFiveHundredDivisor());
	}
}
